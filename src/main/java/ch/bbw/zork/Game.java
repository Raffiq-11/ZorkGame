package ch.bbw.zork;import java.util.ArrayList;import java.util.Arrays;import java.util.HashSet;import java.util.Stack;/** * Class Game - the main class of the "Zork" game. * * Author:  Michael Kolling, 1.1, March 2000 * refactoring: Rinaldo Lanza, September 2020 */public class Game {		private Parser parser;	private Room currentRoom;	private Room attic, bedroom, dining_room, living_room, bath, cellar;	public Game() {				parser = new Parser(System.in);		//beschreibung Ã¤ndern		attic = new Room("the attic in the house");		bedroom = new Room("bedroom, the place to sleep in the house");		dining_room = new Room("wonderful place to eat");		living_room = new Room("the living room in the house");		bath = new Room("bath, the place to take a shower");		cellar = new Room("the creepy place in the house... brrr its cold here.");		attic.setExits(null, null, dining_room, null);		bedroom.setExits(null, dining_room, living_room, null);		dining_room.setExits(attic, null, bath, bedroom);		living_room.setExits(bedroom, bath, cellar, null);		bath.setExits(dining_room, null, null, living_room);		cellar.setExits(living_room, null, null, null);		currentRoom = living_room; // start game out//		north, east, south, west)	}	/**	 *  Main play routine.  Loops until end of play.	 */	public void play() {		printWelcome();		// Enter the main command loop.  Here we repeatedly read commands and		// execute them until the game is over.		boolean finished = false;		while (!finished) {			Command command = parser.getCommand();			finished = processCommand(command);		}		System.out.println("Thank you for playing.  Good bye.");	}	private void printWelcome() {		System.out.println();		System.out.println("Welcome to Zork!");		System.out.println("Zork is a simple adventure game.");		System.out.println("Type 'help' if you need help.");		System.out.println();		System.out.println(currentRoom.longDescription());	}	private boolean processCommand(Command command) {		if (command.isUnknown()) {			System.out.println("I don't know what you mean...");			return false;		}		String commandWord = command.getCommandWord();		if (commandWord.equals("help")) {			printHelp();		} else if (commandWord.equals("map")) {			printmap();		} else if (commandWord.equals("go")) {			goRoom(command);					} else if (commandWord.equals("quit")) {			if (command.hasSecondWord()) {				System.out.println("Quit what?");			} else {				return true; // signal that we want to quit			}		}		return false;	}	private void printHelp() {		System.out.println("You are lost. You are alone. You wander");		System.out.println("around at Monash Uni, Peninsula Campus.");		System.out.println();		System.out.println("Your command words are:");		System.out.println(parser.showCommands());	}	private void printmap() {		System.out.println("| Attic  |     |     |     |       |    |");		System.out.println("_________________________________________");		System.out.println("        |             |           |      ");		System.out.println("_________________________________________");		System.out.println(" |    | Bedroom   |       |  dining_room|");		System.out.println("________________________________________");		System.out.println("_________________________________________");		System.out.println("|  |   living_room |    | | |   |   bath|");		System.out.println("_________________________________________");		System.out.println("  |      |      |        |        |      ");		System.out.println("  |            |          |     |        ");		System.out.println("   | cellar    |          |    |         ");	}	private void goRoom(Command command) {		if (!command.hasSecondWord()) {			System.out.println("Go where?");		} else {						String direction = command.getSecondWord();				// Try to leave current room.			Room nextRoom = currentRoom.nextRoom(direction);				if (nextRoom == null)				System.out.println("There is no door!");			else {				currentRoom = nextRoom;				System.out.println(currentRoom.longDescription());			}		}	}}